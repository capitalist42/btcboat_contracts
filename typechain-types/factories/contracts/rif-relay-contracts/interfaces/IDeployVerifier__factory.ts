/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDeployVerifier,
  IDeployVerifierInterface,
} from "../../../../contracts/rif-relay-contracts/interfaces/IDeployVerifier";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "relayHub",
                type: "address",
              },
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "recoverer",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validUntilTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct IForwarder.DeployRequest",
            name: "request",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "feesReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callForwarder",
                type: "address",
              },
              {
                internalType: "address",
                name: "callVerifier",
                type: "address",
              },
            ],
            internalType: "struct EnvelopingTypes.RelayData",
            name: "relayData",
            type: "tuple",
          },
        ],
        internalType: "struct EnvelopingTypes.DeployRequest",
        name: "relayRequest",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifyRelayedCall",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "versionVerifier",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IDeployVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IDeployVerifierInterface {
    return new Interface(_abi) as IDeployVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDeployVerifier {
    return new Contract(address, _abi, runner) as unknown as IDeployVerifier;
  }
}
